import test from 'ava'
const { Builder, By, until } = require('selenium-webdriver')
const page1Text = require('./data/page1Text')

let driver
test.before(() => {
  driver = new Builder()
    .forBrowser('safari')
    .build()
})

test.after.always(() => {
  return driver.quit()
})

test.beforeEach(t => {
  t.context = {
    app: {
      launch: () => driver.get('http://localhost:8000'),
      page: () => {},
      currentTextContent: () => [
        [
          'בְּרֵאשִׁ֖ית בָּרָ֣א אֱלֹהִ֑ים אֵ֥ת הַשָּׁמַ֖יִם וְאֵ֥ת הָאָֽרֶץ׃'
        ],
        [
          'וְהָאָ֗רֶץ הָיְתָ֥ה תֹ֙הוּ֙ וָבֹ֔הוּ וְחֹ֖שֶׁךְ עַל־פְּנֵ֣י תְה֑וֹם וְר֣וּחַ'
        ],
        [
          'אֱלֹהִ֔ים מְרַחֶ֖פֶת עַל־פְּנֵ֥י הַמָּֽיִם׃ וַיֹּ֥אמֶר אֱלֹהִ֖ים יְהִ֣י'
        ],
        [
          'א֑וֹר וַֽיְהִי־אֽוֹר׃ וַיַּ֧רְא אֱלֹהִ֛ים אֶת־הָא֖וֹר כִּי־ט֑וֹב'
        ],
        [
          'וַיַּבְדֵּ֣ל אֱלֹהִ֔ים בֵּ֥ין הָא֖וֹר וּבֵ֥ין הַחֹֽשֶׁךְ׃ וַיִּקְרָ֨א'
        ],
        [
          'אֱלֹהִ֤ים ׀ לָאוֹר֙ י֔וֹם וְלַחֹ֖שֶׁךְ קָ֣רָא לָ֑יְלָה וַֽיְהִי־עֶ֥רֶב'
        ],
        [
          'וַֽיְהִי־בֹ֖קֶר י֥וֹם אֶחָֽד׃#(פ)'
        ],
        [
          'וַיֹּ֣אמֶר אֱלֹהִ֔ים יְהִ֥י רָקִ֖יעַ בְּת֣וֹךְ הַמָּ֑יִם וִיהִ֣י מַבְדִּ֔יל'
        ],
        [
          'בֵּ֥ין מַ֖יִם לָמָֽיִם׃ וַיַּ֣עַשׂ אֱלֹהִים֮ אֶת־הָרָקִיעַ֒ וַיַּבְדֵּ֗ל'
        ],
        [
          'בֵּ֤ין הַמַּ֙יִם֙ אֲשֶׁר֙ מִתַּ֣חַת לָרָקִ֔יעַ וּבֵ֣ין הַמַּ֔יִם אֲשֶׁ֖ר'
        ],
        [
          'מֵעַ֣ל לָרָקִ֑יעַ וַֽיְהִי־כֵֽן׃ וַיִּקְרָ֧א אֱלֹהִ֛ים לָֽרָקִ֖יעַ שָׁמָ֑יִם'
        ],
        [
          'וַֽיְהִי־עֶ֥רֶב וַֽיְהִי־בֹ֖קֶר י֥וֹם שֵׁנִֽי׃#(פ)'
        ],
        [
          'וַיֹּ֣אמֶר אֱלֹהִ֗ים יִקָּו֨וּ הַמַּ֜יִם מִתַּ֤חַת הַשָּׁמַ֙יִם֙ אֶל־'
        ],
        [
          'מָק֣וֹם אֶחָ֔ד וְתֵרָאֶ֖ה הַיַּבָּשָׁ֑ה וַֽיְהִי־כֵֽן׃ וַיִּקְרָ֨א אֱלֹהִ֤ים ׀'
        ],
        [
          'לַיַּבָּשָׁה֙ אֶ֔רֶץ וּלְמִקְוֵ֥ה הַמַּ֖יִם קָרָ֣א יַמִּ֑ים וַיַּ֥רְא'
        ],
        [
          'אֱלֹהִ֖ים כִּי־טֽוֹב׃ וַיֹּ֣אמֶר אֱלֹהִ֗ים תַּֽדְשֵׁ֤א הָאָ֙רֶץ֙'
        ],
        [
          'דֶּ֔שֶׁא עֵ֚שֶׂב מַזְרִ֣יעַ זֶ֔רַע עֵ֣ץ פְּרִ֞י עֹ֤שֶׂה פְּרִי֙ לְמִינ֔וֹ'
        ],
        [
          'אֲשֶׁ֥ר זַרְעוֹ־ב֖וֹ עַל־הָאָ֑רֶץ וַֽיְהִי־כֵֽן׃ וַתּוֹצֵ֨א הָאָ֜רֶץ'
        ],
        [
          'דֶּ֠שֶׁא עֵ֣שֶׂב מַזְרִ֤יעַ זֶ֙רַע֙ לְמִינֵ֔הוּ וְעֵ֧ץ עֹֽשֶׂה־פְּרִ֛י'
        ],
        [
          'אֲשֶׁ֥ר זַרְעוֹ־ב֖וֹ לְמִינֵ֑הוּ וַיַּ֥רְא אֱלֹהִ֖ים כִּי־טֽוֹב׃ וַֽיְהִי־'
        ],
        [
          'עֶ֥רֶב וַֽיְהִי־בֹ֖קֶר י֥וֹם שְׁלִישִֽׁי׃#(פ)'
        ],
        [
          'וַיֹּ֣אמֶר אֱלֹהִ֗ים יְהִ֤י מְאֹרֹת֙ בִּרְקִ֣יעַ הַשָּׁמַ֔יִם לְהַבְדִּ֕יל'
        ],
        [
          'בֵּ֥ין הַיּ֖וֹם וּבֵ֣ין הַלָּ֑יְלָה וְהָי֤וּ לְאֹתֹת֙ וּלְמ֣וֹעֲדִ֔ים וּלְיָמִ֖ים'
        ],
        [
          'וְשָׁנִֽים׃ וְהָי֤וּ לִמְאוֹרֹת֙ בִּרְקִ֣יעַ הַשָּׁמַ֔יִם לְהָאִ֖יר עַל־'
        ],
        [
          'הָאָ֑רֶץ וַֽיְהִי־כֵֽן׃ וַיַּ֣עַשׂ אֱלֹהִ֔ים אֶת־שְׁנֵ֥י הַמְּאֹרֹ֖ת'
        ],
        [
          'הַגְּדֹלִ֑ים אֶת־הַמָּא֤וֹר הַגָּדֹל֙ לְמֶמְשֶׁ֣לֶת הַיּ֔וֹם וְאֶת־'
        ],
        [
          'הַמָּא֤וֹר הַקָּטֹן֙ לְמֶמְשֶׁ֣לֶת הַלַּ֔יְלָה וְאֵ֖ת הַכּוֹכָבִֽים׃'
        ],
        [
          'וַיִּתֵּ֥ן אֹתָ֛ם אֱלֹהִ֖ים בִּרְקִ֣יעַ הַשָּׁמָ֑יִם לְהָאִ֖יר עַל־'
        ],
        [
          'הָאָֽרֶץ׃ וְלִמְשֹׁל֙ בַּיּ֣וֹם וּבַלַּ֔יְלָה וּֽלֲהַבְדִּ֔יל בֵּ֥ין הָא֖וֹר'
        ],
        [
          'וּבֵ֣ין הַחֹ֑שֶׁךְ וַיַּ֥רְא אֱלֹהִ֖ים כִּי־טֽוֹב׃ וַֽיְהִי־עֶ֥רֶב וַֽיְהִי־'
        ],
        [
          'בֹ֖קֶר י֥וֹם רְבִיעִֽי׃#(פ)'
        ],
        [
          'וַיֹּ֣אמֶר אֱלֹהִ֔ים יִשְׁרְצ֣וּ הַמַּ֔יִם שֶׁ֖רֶץ נֶ֣פֶשׁ חַיָּ֑ה'
        ],
        [
          'וְעוֹף֙ יְעוֹפֵ֣ף עַל־הָאָ֔רֶץ עַל־פְּנֵ֖י רְקִ֥יעַ הַשָּׁמָֽיִם׃'
        ],
        [
          'וַיִּבְרָ֣א אֱלֹהִ֔ים אֶת־הַתַּנִּינִ֖ם הַגְּדֹלִ֑ים וְאֵ֣ת כָּל־נֶ֣פֶשׁ'
        ],
        [
          'הַֽחַיָּ֣ה ׀ הָֽרֹמֶ֡שֶׂת אֲשֶׁר֩ שָׁרְצ֨וּ הַמַּ֜יִם לְמִֽינֵהֶ֗ם וְאֵ֨ת'
        ],
        [
          'כָּל־ע֤וֹף כָּנָף֙ לְמִינֵ֔הוּ וַיַּ֥רְא אֱלֹהִ֖ים כִּי־טֽוֹב׃ וַיְבָ֧רֶךְ'
        ],
        [
          'אֹתָ֛ם אֱלֹהִ֖ים לֵאמֹ֑ר פְּר֣וּ וּרְב֗וּ וּמִלְא֤וּ אֶת־הַמַּ֙יִם֙'
        ],
        [
          'בַּיַּמִּ֔ים וְהָע֖וֹף יִ֥רֶב בָּאָֽרֶץ׃ וַֽיְהִי־עֶ֥רֶב וַֽיְהִי־בֹ֖קֶר'
        ],
        [
          'י֥וֹם חֲמִישִֽׁי׃#(פ)'
        ],
        [
          'וַיֹּ֣אמֶר אֱלֹהִ֗ים תּוֹצֵ֨א הָאָ֜רֶץ נֶ֤פֶשׁ חַיָּה֙ לְמִינָ֔הּ'
        ],
        [
          'בְּהֵמָ֥ה וָרֶ֛מֶשׂ וְחַֽיְתוֹ־אֶ֖רֶץ לְמִינָ֑הּ וַֽיְהִי־כֵֽן׃ וַיַּ֣עַשׂ'
        ],
        [
          'אֱלֹהִים֩ אֶת־חַיַּ֨ת הָאָ֜רֶץ לְמִינָ֗הּ וְאֶת־הַבְּהֵמָה֙ לְמִינָ֔הּ'
        ]
      ],
      currentTitle: () => driver.wait(until.elementLocated(By.css('.navigation-title')), 2000)
        .then((el) => el.getText())
        .then((title) => title.trim()),
      jumpToParsha: (parsha) => driver.wait(until.elementsLocated(By.css('.parshiyot-parsha')), 2000)
        .then((elements) => Promise.all(elements.map((el) => el.getText().then((text) => ({el, text})))))
        .then((elements) => elements.find(({text}) => text === parsha))
        .then(({el}) => el.click())
    }
  }
})

test('the displayed text on launch is the text of the first page', t => {
  const { app } = t.context
  return app.launch()
    .then(() => app.currentTextContent())
    .then((textContent) => t.deepEqual(textContent, page1Text))
})

test('the displayed title on launch is the first parsha', t => {
  const { app } = t.context
  return app.launch()
    .then(() => app.currentTitle())
    .then((title) => t.is(title, 'בראשית'))
})

test('clicking on a parsha from the list should display that parsha in the title', t => {
  const { app } = t.context

  return app.launch()
    .then(() => app.jumpToParsha('נח'))
    .then(() => app.currentTitle())
    .then((title) => {
      t.is(title, 'בראשית – נח')
    })
})

test.todo('clicking on a parsha from the list should display that parsha\'s first page')
test.todo('clicking on a next page should show next page after this one')
test.todo('clicking on a previous page should show previous page before this one')
test.todo('changing annotation toggle from on to off should hide annotations')

